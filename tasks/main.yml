---
- name: check if module is already installed
  shell: "grep mysql.so {{ sqlegacy_php_ini }}"
  register: module_installed
  ignore_errors: yes
  changed: no
  no_log: yes

- name: exit role when module is installed
  meta: end_play
  when: not module_installed.failed

- name: install requirements
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ sqlegacy_requirements }}"

- name: create temporary build directory
  tempfile:
    state: directory
    suffix: build-mysql-legacy
  register: tmp

- name: checkout git repo
  git:
    repo: "{{ sqlegacy_repo }}"
    dest: "{{ tmp.path }}"

- name: run phpize
  command: "phpize"
  args:
    chdir: "{{ tmp.path }}"

- name: configure
  command: "./configure"
  args:
    chdir: "{{ tmp.path }}"

- name: make
  make:
    chdir: "{{ tmp.path }}"

- name: make install
  make:
    target: install
    chdir: "{{ tmp.path }}"
  register: module_path

- name: register extension
  lineinfile:
    dest: "{{ sqlegacy_php_ini }}"
    line: "extension={{ module_path.stdout.split(' ')[-1] }}mysql.so"
